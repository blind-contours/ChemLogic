geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
length((cluster_data_actives$ASSAY_OUTCOME))
table((cluster_data_actives$ASSAY_OUTCOME))
dim(cluster_data_actives)
AR_cluster_results <- cluster_chem_data(receptor_type = "Androgen", data = AR_cluster_data, rank = 3, filter_type = "Pubchem")
log_SVD_results = AR_cluster_results$logsvd_results
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
dim(log_SVD_results)
dim(log_SVD_results$A)
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
cluster_data_actives$ASSAY_OUTCOME %>% mutate(ASSAY_OUTCOME = ifelse(ASSAY_OUTCOME == ""), "No Data",ASSAY_OUTCOME)
cluster_data_actives %>% mutate(ASSAY_OUTCOME = ifelse(ASSAY_OUTCOME == ""), "No Data",ASSAY_OUTCOME)
cluster_data_actives %>% mutate(ASSAY_OUTCOME = ifelse(ASSAY_OUTCOME == "", "No Data",ASSAY_OUTCOME))
cluster_data_actives$ASSAY_OUTCOME <- cluster_data_actives %>% mutate(ASSAY_OUTCOME = ifelse(ASSAY_OUTCOME == "", "No Data",ASSAY_OUTCOME))
table(cluster_data_actives$ASSAY_OUTCOME)
cluster_data_actives$ASSAY_OUTCOME
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label = TRUE) {
#  cluster_data_actives$ASSAY_OUTCOME <- cluster_data_actives %>% mutate(ASSAY_OUTCOME = ifelse(ASSAY_OUTCOME == "", "No Data",ASSAY_OUTCOME))
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
plot
ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "No Data", AR_cluster_data$ASSAY_OUTCOME)
table(ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "No Data", AR_cluster_data$ASSAY_OUTCOME))
AR_cluster_data$ASSAY_OUTCOME <- ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "No Data", AR_cluster_data$ASSAY_OUTCOME)
AR_cluster_results <- cluster_chem_data(receptor_type = "Androgen", data = AR_cluster_data, rank = 3, filter_type = "Pubchem")
AR_cluster_results$kmean_plot
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887') # is the name for testosterone the endogenous ligand
AR_SVD_groups_results$plot
AR_data_PCs_grps <- AR_SVD_groups_results$updated_data
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887',
additional_label = TRUE,
outcome_label = "ASSAY_OUTCOME") # is the name for testosterone the endogenous ligand
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME" ) {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME" ) {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME" ) {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME") {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
endo_ligand
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME") {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
# if (additional_label = TRUE) {
#
#   plot <- plot(log_SVD_results, type = "scores") +
#     geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
#     ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
additional_label
additional_label = TRUE
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (additional_label = TRUE) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (additional_label = TRUE) {
}
if (additional_label = TRUE) {
}
if (additional_label) {
}
if (additional_label) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
plot
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME") {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label) {
plot <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
}
if (endo_ligand) {
return(list(plot = plot, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot, updated_data = data_with_PCs_kmeans_groups)
}
}
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887',
additional_label = TRUE,
outcome_label = "ASSAY_OUTCOME") # is the name for testosterone the endogenous ligand
AR_SVD_groups_results$plot
AR_SVD_groups_results$plot
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME") {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot_w_kmeans <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label) {
plot_outcome <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
} else{plot_outcome <- NA}
if (endo_ligand) {
return(list(plot = plot_w_kmeans, plot_outcome, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot = plot_w_kmeans, plot_outcome, updated_data = data_with_PCs_kmeans_groups)
}
}
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887',
additional_label = TRUE,
outcome_label = "ASSAY_OUTCOME") # is the name for testosterone the endogenous ligand
#' Plot the first two PCs from logistic SVD for molecular features and color by k-means results
#'
#' This function takes in a binary matrix, assuming that the variable names include the fingerprint name such as "Pubchem"
#'
#' @param log_SVD_results Results from the SVD to get data from for plotting
#' @param receptor_type type of receptor for labeling plots
#' @param k number of groups from kmeans from after viewing elbow plot or other methods of determining groups
#' @return Plot of SVD results colored by kmeans groups
#' @export
#'
plot_SVD_kmeans <- function(receptor_type, log_SVD_results, binary_data, k = 4, endo_ligand = FALSE, endo_ligand_id, additional_label = TRUE, outcome_label = "ASSAY_OUTCOME") {
binary_data$Label_names <- tolower(binary_data$Label_names)
cluster_data_actives <- subset(binary_data, Label_names == "active")
kmeans_groups <- kmeans(log_SVD_results$A, k, nstart = 50, iter.max = 15)
groups <- kmeans_groups$cluster
if (endo_ligand) {
groups_endo_idx <- groups
idx <- match(endo_ligand_id, cluster_data_actives$Name)
groups_endo_idx[idx] <- 20
}
plot_w_kmeans <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(groups_endo_idx))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
data_negatives <- binary_data %>% filter(Label_names == "inconclusive" | Label_names == "inactive")
cluster_data_actives$log_SVM_group <- groups
cluster_data_actives$PC_1 <- log_SVD_results$A[,1]
cluster_data_actives$PC_2 <- log_SVD_results$A[,2]
data_negatives$log_SVM_group <- 0
data_negatives$log_SVM_group <- 0
data_negatives$PC_1 <- NA
data_negatives$PC_2 <- NA
data_with_PCs_kmeans_groups <- rbind(cluster_data_actives, data_negatives)
if (additional_label) {
plot_outcome <- plot(log_SVD_results, type = "scores") +
geom_point(aes(colour = as.factor(cluster_data_actives$ASSAY_OUTCOME))) +
ggtitle(paste("Positive Binding for ", receptor_type, sep = ""))
} else{plot_outcome <- NA}
if (endo_ligand) {
return(list(plot_kmeans = plot_w_kmeans, plot_outcome_label = plot_outcome, updated_data = data_with_PCs_kmeans_groups, endo_ligand_grp_included = groups_endo_idx))
} else {
list(plot_kmeans = plot_w_kmeans, plot_outcome_label = plot_outcome, updated_data = data_with_PCs_kmeans_groups)
}
}
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887',
additional_label = TRUE,
outcome_label = "ASSAY_OUTCOME") # is the name for testosterone the endogenous ligand
AR_SVD_groups_results$plot_kmeans
AR_SVD_groups_results$plot_outcome_label
AR_cluster_data$ASSAY_OUTCOME <- ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "no data", AR_cluster_data$ASSAY_OUTCOME)
AR_cluster_data <- merge(AR_data, AR_binding_type_data, by = "Name")
AR_cluster_data$ASSAY_OUTCOME <- ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "no data", AR_cluster_data$ASSAY_OUTCOME)
AR_cluster_data$ASSAY_OUTCOME <- ifelse(AR_cluster_data$ASSAY_OUTCOME =="", "no data", AR_cluster_data$ASSAY_OUTCOME)
```{r cluster binary molecular features}
AR_cluster_results <- cluster_chem_data(receptor_type = "Androgen", data = AR_cluster_data, rank = 3, filter_type = "Pubchem")
AR_cluster_results$kmean_plot
AR_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Androgen",
log_SVD_results = AR_cluster_results$logsvd_results,
binary_data = AR_cluster_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144207887',
additional_label = TRUE,
outcome_label = "ASSAY_OUTCOME") # is the name for testosterone the endogenous ligand
AR_SVD_groups_results$plot_kmeans
AR_SVD_groups_results$plot_outcome_label
AR_SVD_groups_results$plot_kmeans
AR_SVD_groups_results$plot_outcome_label
ER_SVD_groups_results <- plot_SVD_kmeans(receptor_type = "Estrogen",
log_SVD_results = ER_cluster_results$logsvd_results,
binary_data = ER_data,
k = 4,
endo_ligand = TRUE,
endo_ligand_id = '144213948') # is the name for testosterone the endogenous ligand
ER_SVD_groups_results$plot
ER_SVD_groups_results$plot_kmeans
ER_SVD_groups_results$plot_kmeans
